{"version":3,"file":"component---src-pages-index-js-20322b89023526c4e104.js","mappings":"2IAyBA,IAtBA,SAAYA,GAAc,IAAb,OAAEC,GAAQD,EACrB,IAAKC,EAAQ,OAAO,KACpB,MAAM,IAAEC,EAAG,KAAEC,GAASF,EACtB,OACEG,EAAAA,cAAA,OAAKC,UAAU,OACbD,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,KAAGC,UAAU,SAAQ,SAEnBD,EAAAA,cAAA,WACCF,EAAII,KAAK,IAACF,EAAAA,cAAA,cAASD,GAAc,OAClCC,EAAAA,cAAA,YAEDF,EAAIK,YAAYC,KAAI,CAACD,EAAaE,IACjCL,EAAAA,cAAA,KAAGC,UAAU,cAAcK,IAAKD,GAC7BF,MAMb,C,iJCUA,MAvBA,SAAiBP,GAAY,IAAX,KAAEW,GAAMX,EACxB,MAAMY,EAAQD,EAAKE,kBAAkBC,MAAMN,KAAIO,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAAK,IAAIE,EAAAA,EAAKD,EAAK,KACrE,OAAEf,GAAWU,EAAKO,KAAKC,aACvBC,EAAU,CAAI,OAAKC,QAAAC,EAAAA,EAAAA,GCbSV,KAClC,MAAMW,EAAc,IAAIC,IAExB,OADAZ,EAAMa,SAAQzB,IAAA,IAAC,WAAEoB,GAAYpB,EAAA,OAAKoB,EAAWK,SAASC,GAAaH,EAAYI,IAAID,IAAU,KACtFJ,EAAAA,EAAAA,GAAIC,GAAaK,MAAK,CAACC,EAAGC,IACrB,aAAND,GAA0B,EACpB,aAANC,EAAyB,EACtB,GACP,EDM4BC,CAAoBnB,KAC5CoB,EAAmBZ,EAAWa,WAAWP,GAA0B,aAAbA,KACtD,EAACQ,EAAS,EAACC,IAAeC,EAAAA,EAAAA,WAA+B,IAAtBJ,EAA0B,EAAIA,GACjEK,GAAmBC,EAAAA,EAAAA,cAAY,CAACC,EAAGC,IAAUL,EAAYK,IAAQ,IAEvE,OACEpC,EAAAA,cAACqC,EAAAA,EAAM,KACLrC,EAAAA,cAACsC,EAAAA,EAAG,CAACC,MAAM,SACXvC,EAAAA,cAACwC,EAAAA,EAAG,CAAC3C,OAAQA,IACbG,EAAAA,cAACyC,EAAAA,EAAQ,CACPjC,MAAOA,EACPkC,SAAUT,EACVU,KAAM3B,EACNc,SAAUA,EACVc,gBAAc,IAItB,C","sources":["webpack://heony704.github.io/./src/components/bio/index.js","webpack://heony704.github.io/./src/pages/index.js","webpack://heony704.github.io/./src/utils/helpers.js"],"sourcesContent":["import React from 'react';\nimport './style.scss';\n\nfunction Bio({ author }) {\n  if (!author) return null;\n  const { bio, name } = author;\n  return (\n    <div className=\"bio\">\n      <div className=\"introduction\">\n        <p className=\"title\">\n          안녕하세요.\n          <br />\n          {bio.role} <strong>{name}</strong>입니다.\n          <br />\n        </p>\n        {bio.description.map((description, index) => (\n          <p className=\"description\" key={index}>\n            {description}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Bio;\n","import React, { useCallback, useState } from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport Bio from '../components/bio';\nimport Post from '../models/post';\n\nimport { getUniqueCategories } from '../utils/helpers';\nimport PostTabs from '../components/post-tabs';\n\nfunction HomePage({ data }) {\n  const posts = data.allMarkdownRemark.edges.map(({ node }) => new Post(node));\n  const { author } = data.site.siteMetadata;\n  const categories = ['All', ...getUniqueCategories(posts)];\n  const featuredTabIndex = categories.findIndex((category) => category === 'featured');\n  const [tabIndex, setTabIndex] = useState(featuredTabIndex === -1 ? 0 : featuredTabIndex);\n  const onTabIndexChange = useCallback((e, value) => setTabIndex(value), []);\n\n  return (\n    <Layout>\n      <Seo title=\"Home\" />\n      <Bio author={author} />\n      <PostTabs\n        posts={posts}\n        onChange={onTabIndexChange}\n        tabs={categories}\n        tabIndex={tabIndex}\n        showMoreButton\n      />\n    </Layout>\n  );\n}\n\nexport default HomePage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 500, truncate: true)\n          frontmatter {\n            categories\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n\n    site {\n      siteMetadata {\n        author {\n          name\n          bio {\n            role\n            description\n            thumbnail\n          }\n          social {\n            github\n            linkedIn\n            email\n          }\n        }\n      }\n    }\n  }\n`;\n","export const getUniqueCategories = (posts) => {\n  const categorySet = new Set();\n  posts.forEach(({ categories }) => categories.forEach((category) => categorySet.add(category)));\n  return [...categorySet].sort((a, b) => {\n    if (a === 'featured') return -1;\n    if (b === 'featured') return 1;\n    return 0;\n  });\n};\n"],"names":["_ref","author","bio","name","React","className","role","description","map","index","key","data","posts","allMarkdownRemark","edges","_ref2","node","Post","site","siteMetadata","categories","concat","_toConsumableArray","categorySet","Set","forEach","category","add","sort","a","b","getUniqueCategories","featuredTabIndex","findIndex","tabIndex","setTabIndex","useState","onTabIndexChange","useCallback","e","value","Layout","Seo","title","Bio","PostTabs","onChange","tabs","showMoreButton"],"sourceRoot":""}