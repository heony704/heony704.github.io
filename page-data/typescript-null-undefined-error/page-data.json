{"componentChunkName":"component---src-templates-blog-template-js","path":"/typescript-null-undefined-error/","result":{"data":{"cur":{"id":"6ea110b8-e4d9-5a8f-90d0-7f56159d839b","html":"<p>typescript가 개체가 undefined, null 인 것 같다며 에러를 발생시키는 이유, 그리고 실행하도록 설득하는 방법에 대해 알아봤습니다.</p>\n<h2 id=\"문제-상황\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%83%81%ED%99%A9\" aria-label=\"문제 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 상황</h2>\n<p><code class=\"language-text\">tsconfig.json</code>에서 다음과 같이 설정된 경우 null 과 undefined 문제를 엄격하게 관리합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"stric\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>따라서 다음과 같은 에러가 자주 발생합니다.</p>\n<blockquote>\n<p>개체가 ‘undefined’인 것 같습니다.ts(2532)<br>\n개체가 ‘null’인 것 같습니다.ts(2531)</p>\n</blockquote>\n<p>변수 중 Date 와 null 이 둘다 들어가는 경우 다음과 같은 에러도 발생합니다.</p>\n<blockquote>\n<p>‘null’ 형식은 ‘Date’ 형식에 할당할 수 없습니다.ts(2322)</p>\n</blockquote>\n<h2 id=\"문제-해결\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0\" aria-label=\"문제 해결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결</h2>\n<p>위 에러는 세가지 방법으로 해결할 수 있습니다.</p>\n<h3 id=\"1-타입을-any로-정하기\" style=\"position:relative;\"><a href=\"#1-%ED%83%80%EC%9E%85%EC%9D%84-any%EB%A1%9C-%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"1 타입을 any로 정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 타입을 any로 정하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token literal-property property\">startTime</span><span class=\"token operator\">:</span> any<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 후략</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>any를 사용하면 TypeScript를 사용하는 의미가 없어보여 찜찜합니다.</p>\n<h3 id=\"2-유니온-타입-사용하기\" style=\"position:relative;\"><a href=\"#2-%EC%9C%A0%EB%8B%88%EC%98%A8-%ED%83%80%EC%9E%85-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"2 유니온 타입 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 유니온 타입 사용하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> <span class=\"token literal-property property\">startTime</span><span class=\"token operator\">:</span> Date <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 후략</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>어떤 타입인지 한눈에 들어오지 않습니다.</p>\n<h3 id=\"3-strictnullchecks-false\" style=\"position:relative;\"><a href=\"#3-strictnullchecks-false\" aria-label=\"3 strictnullchecks false permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. “strictNullChecks”: false</h3>\n<p>위 두 방법을 사용해도 개체가 undefined 혹은 null일 경우를 엄격하게 관리하여 코드 짜기가 힘들었습니다.<br>\n아예 엄격하게 검사하지 않도록 <code class=\"language-text\">tsconfig.json</code>을 다음과 같이 수정했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"strictNullChecks\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p>TypeScript를 적용할 때 엄격하게 undefined, null을 체크할 필요가 없는 경우 <code class=\"language-text\">tsconfig.json</code>에 <code class=\"language-text\">\"strictNullChecks\": false</code>를 추가하는 것이 좋습니다.<br>\n하지만 혹시 모를 에러를 대비해야 한다면 undefined, null 에러를 검사하도록 엄격하게 관리해야 합니다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%83%81%ED%99%A9\">문제 상황</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0\">문제 해결</a></p>\n<ul>\n<li><a href=\"#1-%ED%83%80%EC%9E%85%EC%9D%84-any%EB%A1%9C-%EC%A0%95%ED%95%98%EA%B8%B0\">1. 타입을 any로 정하기</a></li>\n<li><a href=\"#2-%EC%9C%A0%EB%8B%88%EC%98%A8-%ED%83%80%EC%9E%85-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">2. 유니온 타입 사용하기</a></li>\n<li><a href=\"#3-strictnullchecks-false\">3. “strictNullChecks”: false</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></p>\n</li>\n</ul>\n</div>","excerpt":"typescript가 개체가 undefined, null 인 것 같다며 에러를 발생시키는 이유, 그리고 실행하도록 설득하는 방법에 대해 알아봤습니다. 문제 상황 에서 다음과 같이 설정된 경우 null 과 undefined 문제를 엄격하게 관리합니다. 따라서 다음과 같은 에러가 자주 발생합니다. 개체가 ‘undefined’인 것 같습니다.ts(2532) 개체가 ‘null’인 것 같습니다.ts(2531) 변수 중 Date 와 null 이 둘다 들어가는 경우 다음과 같은 에러도 발생합니다. ‘null’ 형식은 ‘Date’ 형식에 할당할 수 없습니다.ts(2322) 문제 해결 위 에러는 세가지 방법으로 해결할 수 있습니다. 1. 타입을 any로 정하기 any를 사용하면 TypeScript를 사용하는 의미가 없어보여 찜찜합니다. 2. 유니온 타입 사용하기 어떤 타입인지 한눈에 들어오지 않습니다. 3. “strictNullChecks”: false 위 두 방법을 사용해도 개체가 undefin…","frontmatter":{"date":"September 18, 2021","title":"typescript 개체가 null, undefined인 것 같습니다?","categories":"typescript"},"fields":{"slug":"/typescript-null-undefined-error/"}},"next":{"id":"6331e34c-e54d-5169-bf53-7f223c0d5e07","html":"<p>특정 수가 소수인지 판별해내는 함수를 JavaScript로 구현하고자 합니다.</p>\n<p>먼저 소수가 무엇인지 알아봅시다.</p>\n<h2 id=\"소수prime-number란\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%88%98prime-number%EB%9E%80\" aria-label=\"소수prime number란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소수(Prime Number)란?</h2>\n<ul>\n<li>1보다 큰 자연수 중 1과 자기 자신만을 약수로 가지는 수</li>\n</ul>\n<p>위를 통해 소수의 기준을 다음과 같이 정의할 수 있습니다.</p>\n<ul>\n<li>1보다 큰 자연수</li>\n<li>1과 자기 자신만이 약수</li>\n</ul>\n<h2 id=\"간단하게-소수판별함수-구현하기\" style=\"position:relative;\"><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%86%8C%EC%88%98%ED%8C%90%EB%B3%84%ED%95%A8%EC%88%98-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"간단하게 소수판별함수 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>간단하게 소수판별함수 구현하기</h2>\n<p>소수 <code class=\"language-text\">N</code>은 <code class=\"language-text\">1</code>과 자기자신만을 약수로 가지므로, <code class=\"language-text\">2 ~ N-1</code>까지의 수로 나눴을 때 나머지가 <code class=\"language-text\">0</code>이 아닙니다.<br>\n이를 이용해 간단한 소수 판별 함수를 만들 수 있습니다.</p>\n<p>숫자 <code class=\"language-text\">N</code>을 <code class=\"language-text\">2</code>부터 <code class=\"language-text\">n-1</code>까지 나눴을 때 나머지가 <code class=\"language-text\">0</code>인지 체크합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">isPrimeNumber</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> input<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 함수의 시간 복잡도는 <code class=\"language-text\">O(N)</code>입니다.</p>\n<h2 id=\"더-효율적인-소수판별함수-구현하기\" style=\"position:relative;\"><a href=\"#%EB%8D%94-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%EC%86%8C%EC%88%98%ED%8C%90%EB%B3%84%ED%95%A8%EC%88%98-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"더 효율적인 소수판별함수 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>더 효율적인 소수판별함수 구현하기</h2>\n<p>소수 판별 함수를 더 빠르게 돌릴 수 있는 방법입니다.<br>\n<code class=\"language-text\">√N</code>보다 더 큰 수는 합성수이거나 소수일 수 밖에 없습니다. 직접 해보면 이해됩니다.</p>\n<blockquote>\n<p>참고로 합성수는 1보다 큰 자연수 중 소수가 아닌 수를 의미합니다.</p>\n</blockquote>\n<p>따라서 숫자 <code class=\"language-text\">N</code>을 <code class=\"language-text\">2</code>부터 <code class=\"language-text\">√N</code>까지 나눴을 때 나머지가 <code class=\"language-text\">0</code>인지 체크합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">isPrimeNumber</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> sqrt <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> sqrt<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>input <span class=\"token operator\">%</span> i <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이 함수의 시간 복잡도는 <code class=\"language-text\">O(√N)</code>으로, 간단하게 만들었을 때보다 더 좋아졌습니다.</p>\n<h2 id=\"에라토스테네스의-체\" style=\"position:relative;\"><a href=\"#%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98-%EC%B2%B4\" aria-label=\"에라토스테네스의 체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>에라토스테네스의 체</h2>\n<p>소수 판별을 찾아보다 보면 에라토스테네스의 체도 같이 언급되곤 합니다.</p>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98_%EC%B2%B4\">에라토스테네스의 체</a>는 소수를 찾는 방법 중 하나로, 특정 범위 내에서 특정 수의 배수는 전부 소수에서 제외시켜 빠르게 소수들을 찾아내는 방법입니다.<br>\n따라서 특정 범위 내에서 소수를 찾을 때 가장 빠른 방법이지만, 특정 수가 소수인지 판별하기엔 적합하지 않습니다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%86%8C%EC%88%98prime-number%EB%9E%80\">소수(Prime Number)란?</a></li>\n<li><a href=\"#%EA%B0%84%EB%8B%A8%ED%95%98%EA%B2%8C-%EC%86%8C%EC%88%98%ED%8C%90%EB%B3%84%ED%95%A8%EC%88%98-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\">간단하게 소수판별함수 구현하기</a></li>\n<li><a href=\"#%EB%8D%94-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9D%B8-%EC%86%8C%EC%88%98%ED%8C%90%EB%B3%84%ED%95%A8%EC%88%98-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\">더 효율적인 소수판별함수 구현하기</a></li>\n<li><a href=\"#%EC%97%90%EB%9D%BC%ED%86%A0%EC%8A%A4%ED%85%8C%EB%84%A4%EC%8A%A4%EC%9D%98-%EC%B2%B4\">에라토스테네스의 체</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 13, 2021","title":"소수(Prime Number) 구하기","categories":"algorithm javascript"},"fields":{"slug":"/prime-number/"}},"prev":{"id":"8a64735c-7264-52bd-8a45-c1dcd3c6d40c","html":"<p><code class=\"language-text\">tsconfig.json</code> 파일에서 발생한 <code class=\"language-text\">구성 파일에서 입력을 찾을 수 없습니다.</code> 오류를 해결하기 위해 노력한 과정입니다.<br>\n사용한 코드 편집기는 vscode입니다.</p>\n<h2 id=\"문제-발생-전\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EB%B0%9C%EC%83%9D-%EC%A0%84\" aria-label=\"문제 발생 전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 발생 전</h2>\n<p>자바스크립트 프로젝트에서 es6을 사용하려면 babel을 설치해야 한다는 걸 알고 고민하다가 타입스크립트 프로젝트로 변환하기로 결심했습니다.<br>\n예전부터 타입스크립트를 적용하는 걸 염두에 두고 있었기 때문입니다.<br>\n기존 자바스크립트 프로젝트에 타입스크립트를 설치하고 개발환경을 설정했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> typescript\ntsc <span class=\"token parameter variable\">--init</span></code></pre></div>\n<h2 id=\"문제-발생\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EB%B0%9C%EC%83%9D\" aria-label=\"문제 발생 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 발생</h2>\n<p><code class=\"language-text\">tsc --init</code>을 통해 만들어진 <code class=\"language-text\">tsconfig.json</code>에 한줄의 에러가 계속 없어지지 않았습니다.</p>\n<blockquote>\n<p>구성 파일에서 입력을 찾을 수 없습니다. 어쩌구 저쩌구 …</p>\n</blockquote>\n<p>이 에러는 아무짓도 하지 않았는데 발생했습니다.<br>\n설정이 덜 된줄 알고 include와 exclude를 추가하거나 별 짓을 다 해봐도 그 한줄은 없어지지 않았습니다.</p>\n<h2 id=\"문제-해결-과정\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95\" aria-label=\"문제 해결 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 해결 과정</h2>\n<p>그러던 중 <a href=\"https://typescript-kr.github.io/pages/tsconfig.json.html\">타입 스크립트 핸드북</a>에서 다음을 찾았습니다.</p>\n<ul>\n<li>“compilerOptions” 속성은 생략될 수 있으며 생략하면 컴파일러의 기본 값이 사용됩니다.</li>\n<li>“files”과 “include” 모두 지정되어 있지 않다면 컴파일러는 기본적으로 “exclude” 속성을 사용하여 제외된 것은 제외하고 모든 TypeScript (.ts,.d.ts 그리고 .tsx) 파일을 포함하는 디렉토리와 하위 디렉토리에 포함시킵니다.</li>\n<li>tsconfig.json 파일은 완전히 비어둘 수 있으며, 기본 컴파일러 옵션을 사용하여 기본적으로 (위에서 설명한대로) 포함된 모든 파일을 컴파일합니다.</li>\n</ul>\n<p>???<br>\n<code class=\"language-text\">tsconfig.json</code>은 잘못이 없었습니다.. 😭<br>\n더이상 <code class=\"language-text\">tsconfig.json</code>을 괴롭히지 않고 명령어 <code class=\"language-text\">tsc</code>로 컴파일했습니다.</p>\n<p>그랬더니 다음과 같은 에러가 발생했습니다.</p>\n<blockquote>\n<p>Build: No inputs were found in config file</p>\n</blockquote>\n<p>input과 관련된 에러가 뜨길래 구글에 검색해봤습니다.<br>\n가장 많은 추천을 받은 <a href=\"https://stackoverflow.com/questions/41211566/tsconfig-json-buildno-inputs-were-found-in-config-file\">스택 오버플로우 답변</a>입니다.</p>\n<ul>\n<li>Add an empty typescript file to the typescript scripts folder (the location of your tsconfig file) to satisfy the typescript compiler.</li>\n<li>You can also try to restart your code editor. That works well too.</li>\n</ul>\n<p>위 두 답변이 도움이 되었습니다.</p>\n<h2 id=\"해결-방법\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결 방법</h2>\n<ol>\n<li>vscode를 껐다 켜본다.</li>\n<li>src 폴더에 ts 파일을 하나라도 추가시킨다.</li>\n</ol>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p>공식 문서, 핸드북 보는 것을 생활화 하자.<br>\n새로운 모듈 설치 후 문제가 발생하면 혹시 모르니 vscode 껐다 켜보자.<br>\n컴파일도 해보자.</p>\n<p>바보같지만 나중에 이런 일을 또 겪을까봐 기록한 글입니다.</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%EB%B0%9C%EC%83%9D-%EC%A0%84\">문제 발생 전</a></li>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%EB%B0%9C%EC%83%9D\">문제 발생</a></li>\n<li><a href=\"#%EB%AC%B8%EC%A0%9C-%ED%95%B4%EA%B2%B0-%EA%B3%BC%EC%A0%95\">문제 해결 과정</a></li>\n<li><a href=\"#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\">해결 방법</a></li>\n<li><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></li>\n</ul>\n</div>","frontmatter":{"date":"September 18, 2021","title":"tsconfig.json 구성 파일에서 입력을 찾을 수 없습니다.","categories":"typescript"},"fields":{"slug":"/tsconfig-json-input-error/"}},"site":{"siteMetadata":{"siteUrl":"https://heony704.github.io","comments":{"utterances":{"repo":"heony704/heony704.github.io"}}}}},"pageContext":{"slug":"/typescript-null-undefined-error/","nextSlug":"/prime-number/","prevSlug":"/tsconfig-json-input-error/"}},"staticQueryHashes":["161131432","1956554647","2938748437"]}